<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:p="http://www.springframework.org/schema/p" xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">


    <!-- 自动扫描且只扫描@Controller -->
    <context:component-scan base-package="org.lohas.bf.web.controller" use-default-filters="false">
        <context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>

    <!-- mvc 自动转化 配置 -->
    <mvc:annotation-driven>
        <mvc:argument-resolvers>
            <bean class="org.lohas.bf.spring.FastJsonArgumentResolver"/>
        </mvc:argument-resolvers>
        <mvc:message-converters register-defaults="true">
            <!-- StringHttpMessageConverter编码为UTF-8，防止乱码 -->
            <bean class="org.springframework.http.converter.StringHttpMessageConverter">
                <constructor-arg value="UTF-8"/>
                <!-- 接收媒体类型
                <property name="supportedMediaTypes">
                    <list>
                        <bean class="org.springframework.http.MediaType">
                            <constructor-arg index="0" value="*"/>
                            <constructor-arg index="1" value="*"/>
                        </bean>
                    </list>
                </property>-->
            </bean>

            <!-- 使用fastjson 序列化json -->
            <bean id="fastJsonHttpMessageConverter"
                  class="org.lohas.bf.spring.FastJsonHttpMessageConverter">
                <property name="supportedMediaTypes">
                    <list>
                        <value>application/json;charset=UTF-8</value>
                        <value>text/html;charset=UTF-8</value>
                        <value>text/json;charset=UTF-8</value>
                    </list>
                </property>
                <property name="features"><!-- 定制化json -->
                    <list>
                        <value>QuoteFieldNames</value>
                        <value>DisableCircularReferenceDetect</value>
                        <!-- 去除循环检测 -->
                    </list>
                </property>
            </bean>

            <!-- 使用oxm 序列化xml -->
            <bean id="marshallingHttpMessageConverter"
                  class="org.springframework.http.converter.xml.MarshallingHttpMessageConverter">
                <property name="marshaller" ref="castorMarshaller"/>
                <property name="unmarshaller" ref="castorMarshaller"/>
                <property name="supportedMediaTypes">
                    <list>
                        <value>application/xml;charset=UTF-8</value>
                        <value>text/xml;charset=UTF-8</value>
                    </list>
                </property>
            </bean>
        </mvc:message-converters>
    </mvc:annotation-driven>

    <bean id="castorMarshaller" class="org.springframework.oxm.castor.CastorMarshaller"/>

    <!-- mvc视图管理  -->
    <bean id="contentNegotiationManager" class="org.springframework.web.accept.ContentNegotiationManagerFactoryBean">
        <property name="favorPathExtension" value="true"/>
        <property name="favorParameter" value="true"/>
        <property name="useJaf" value="false"/>
        <property name="ignoreAcceptHeader" value="false"/>
        <!-- 默认的content type -->
        <property name="defaultContentType" value="text/html"/>
        <property name="mediaTypes">
            <map>
                <entry key="html" value="text/html"/>
                <entry key="json" value="application/json"/>
                <entry key="xml" value="application/xml"/>
            </map>
        </property>
    </bean>
    <!-- mvc内容协商 -->
    <bean class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver" p:order="0">
        <property name="contentNegotiationManager" ref="contentNegotiationManager"/>
        <property name="viewResolvers">
            <list>
                <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
                    <property name="contentType" value="text/html"/>
                    <property name="prefix" value="/WEB-INF/pages/"/>
                    <property name="suffix" value=".jsp"/>
                </bean>
            </list>
        </property>
        <!-- 默认视图 放在解析链最后 -->
        <property name="defaultViews">
            <list>
                <bean class="org.lohas.bf.spring.FastJsonJsonView"/>
            </list>
        </property>
    </bean>




    <!-- 静态资源 -->
    <mvc:resources mapping="/static/**" location="/static/" cache-period="31556926"/>

    <!-- 将无法mapping到Controller的path交给default servlet handler处理 -->
    <mvc:default-servlet-handler/>

    <!-- 定义无Controller的path<->view直接映射 -->
    <!--
        <mvc:view-controller path="/" view-name="index"/>
    -->

    <!--  拦截器配置 -->
    <mvc:interceptors>

        <!-- backstage -->
         <mvc:interceptor>
             <mvc:mapping path="/backstage/**"/>
             <mvc:exclude-mapping path="/backstage/login,/backstage/loginOut"/>
             <bean class="org.lohas.bf.spring.interceptors.BackStageInterceptors"/>
         </mvc:interceptor>
        <mvc:interceptor>
            <mvc:mapping path="/**"/>
            <mvc:exclude-mapping path="/static/**"/>
            <bean class="org.lohas.bf.spring.interceptors.StopWatchHandlerInterceptor"/>
        </mvc:interceptor>
    </mvc:interceptors>

    <!-- 上传 -->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <property name="defaultEncoding" value="UTF-8"></property>
        <property name="maxUploadSize" value="52428800"></property>
    </bean>

    <!-- 定义aspectj -->
    <aop:aspectj-autoproxy proxy-target-class="true"/>


</beans>